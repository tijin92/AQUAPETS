<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>AQUApets Admin Panel</title>
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <meta content="" name="keywords">
    <meta content="" name="description">

    <!-- sweet alert -->
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.9.0/dist/sweetalert2.min.css" rel="stylesheet">

    <!-- Favicon -->
    <link href="/img/favicon.ico" rel="icon">

    <!-- Google Web Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Heebo:wght@400;500;600;700&display=swap" rel="stylesheet">
    
    <!-- Icon Font Stylesheet -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css" rel="stylesheet">

    <!-- Libraries Stylesheet -->
    <link href="lib/owlcarousel/assets/owl.carousel.min.css" rel="stylesheet">
    <link href="lib/tempusdominus/css/tempusdominus-bootstrap-4.min.css" rel="stylesheet" />

    <!-- Customized Bootstrap Stylesheet -->
    <link href="/css/bootstrap.min.css" rel="stylesheet">

    <!-- Template Stylesheet -->
    <link href="/css/style.css" rel="stylesheet">

    <!-- Include DataTables CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.3.0/css/bootstrap.min.css">

    <!-- Include Responsive extension CSS -->
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.7/css/dataTables.bootstrap5.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/responsive/2.5.0/css/responsive.bootstrap5.min.css">

    <!-- Include jQuery -->
    <script src="https://code.jquery.com/jquery-3.7.0.js"></script>

    <!-- Include DataTables JS -->
    <script src="https://cdn.datatables.net/1.13.7/js/jquery.dataTables.min.js"></script>

    <!-- Include DataTables Bootstrap JS -->
    <script src="https://cdn.datatables.net/1.13.7/js/dataTables.bootstrap5.min.js"></script>

    <!-- Include Responsive extension JS -->
    <script src="https://cdn.datatables.net/responsive/2.5.0/js/responsive.bootstrap5.min.js"></script>

    <!-- Initialize DataTable -->
    <script>
        $(document).ready(function () {
            $('#productList').DataTable({
                responsive: true
            });
        });

        // JavaScript function to update the hidden input field before submitting the form
        function updateStatus(index) {
            var selectedStatus = document.getElementById('status' + index).value;
            document.getElementById('newStatus' + index).value = selectedStatus;
            document.forms[index].submit();
        }
    </script>
    
    <style>
        .address-column {
            min-width: 100px; /* Set your desired minimum width */
        }
    </style>

</head>

<body>


   <!-- top and side nav starts -->

   <div class="container-xxl position-relative bg-white d-flex p-0">
    <!-- Spinner Start -->
    <div id="spinner" class="show bg-white position-fixed translate-middle w-100 vh-100 top-50 start-50 d-flex align-items-center justify-content-center">
        <div class="spinner-border text-primary" style="width: 3rem; height: 3rem;" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
    <!-- Spinner End -->


    <!-- Sidebar Start -->
    <div class="sidebar pe-4 pb-3">
        <nav class="navbar bg-light navbar-light">
            <a href="/admin/home" class="navbar-brand mx-4 mb-3">
                <h3 class="text-primary">AQUApets.in</h3>
            </a>
        
            <div class="navbar-nav w-100">
                <a href="/admin/home" class="nav-item nav-link "><i class="fa fa-tachometer-alt me-2"></i>Dashboard</a>
                
                <a href="/admin/salesReport" class="nav-item nav-link"><i class="fa fa-chart-bar me-2"></i>Sales Report</a>

                <a href="/admin/orderList" class="nav-item nav-link"><i class="far fa-file-alt me-2"></i>Orders</a>

                <a href="/admin/categoryList" class="nav-item nav-link"><i class="fas fa-list"></i>Category</a>

                <a href="/admin/userList" class="nav-item nav-link "><i class="fas fa-users"></i>Users</a>

                <div class="nav-item dropdown">
                    <a href="#" class="nav-link dropdown-toggle active" data-bs-toggle="dropdown"><i class="fas fa-boxes"></i>Products</a>
                    <div class="dropdown-menu bg-transparent border-0">
                        <a href="/admin/addProducts" class="dropdown-item">Add Products</a>
                        <a href="/admin/productList" class="dropdown-item active">View & Update Products</a>
                        
                    </div>
                </div>

                <div class="nav-item dropdown">
                    <a href="#" class="nav-link dropdown-toggle" data-bs-toggle="dropdown"><i class="fa fa-gift" aria-hidden="true"></i>Offer</a>
                    <div class="dropdown-menu bg-transparent border-0">
                        <a href="/admin/addOffer" class="dropdown-item">Add Offer</a>
                        <a href="/admin/viewOffer" class="dropdown-item">View & Update Offer</a>
                        
                    </div>
                </div>

                <div class="nav-item dropdown">
                    <a href="#" class="nav-link dropdown-toggle" data-bs-toggle="dropdown"><i class="fas fa-list-alt"></i>Coupon</a>
                    <div class="dropdown-menu bg-transparent border-0">
                        <a href="/admin/addCoupon" class="dropdown-item">Add Coupon</a>
                        <a href="/admin/viewCoupon" class="dropdown-item">View & Update Coupon</a>
                        
                    </div>
                </div>

                <div class="nav-item dropdown">
                    <a href="#" class="nav-link dropdown-toggle" data-bs-toggle="dropdown"><i class="fa fa-laptop me-2"></i>Banner</a>
                    <div class="dropdown-menu bg-transparent border-0">
                        <a href="/admin/addBanner" class="dropdown-item">Add Banner</a>
                        <a href="/admin/viewBanner" class="dropdown-item">View & Update Banner</a>
                        
                    </div>
                </div>

            </div>
        </nav>
    </div>
    <!-- Sidebar End -->


    <!-- Content Start -->
    <div class="content">
        <!-- Navbar Start -->
        <nav class="navbar navbar-expand bg-light navbar-light sticky-top px-4 py-0">
            <a href="index.html" class="navbar-brand d-flex d-lg-none me-4">
                <h2 class="text-primary mb-0"><i class="fa fa-hashtag"></i></h2>
            </a>
            <a href="#" class="sidebar-toggler flex-shrink-0">
                <i class="fa fa-bars"></i>
            </a>

            <div class="navbar-nav align-items-center ms-auto">
                
                <div class="nav-item dropdown">
                    <a href="#" class="nav-link dropdown-toggle" data-bs-toggle="dropdown">
                        <img class="rounded-circle me-lg-2" src="/img/user.jpg" alt="" style="width: 40px; height: 40px;">
                        <span class="d-none d-lg-inline-flex"></span>
                    </a>
                    <div class="dropdown-menu dropdown-menu-end bg-light border-0 rounded-0 rounded-bottom m-0">
                       
                        <a href="/admin/logout" class="dropdown-item">Log Out</a>
                    </div>
                </div>
            </div>
        </nav>
        <!-- Navbar End -->

<!-- top and side nav ends -->


            <!-- Table Start -->
            <div class="container-fluid pt-4 px-4">
                <div class="row g-4">
                                        
                    <div class="col-12">
                        <div class="bg-light rounded h-100 p-4">

                            <div class="toast" role="alert" aria-live="assertive" aria-atomic="true" data-autohide="true" data-delay="5000">
                                <div class="toast-header">
                                    <strong class="mr-auto">Product Update</strong>
                                </div>
                                <div class="toast-body" id="successToast">
                                    <!-- Success message will be displayed here. -->
                                </div>
                            </div>
                            
                            <div class="mb-4">
                                <span style="font-weight:bold; color: black;">Product List</span>
                                <a href="/admin/addProducts" class="btn btn-primary btn-sm" style="float: right;" role="button">Add Product</a>
                            </div>
                            
                            <div class="table-responsive">
                                <table id="productList" class="table">
                                    <thead>
                                        <tr>
                                            <th scope="col">#</th>
                                            <th scope="col">Name</th>
                                            <th scope="col">Category</th>
                                            <th scope="col">Price</th>
                                            <th scope="col">OfferPrice</th>
                                            <th scope="col">Stock</th>
                                            <th scope="col">Image</th>
                                            <th scope="col">Status</th>
                                            <th scope="col">Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        
                                        <% if (productData.length > 0) { 
                                            productData.forEach(function(product, index) { %>
                                              <tr>
                                                <th scope="row" style="text-align: center;"><%= index+1 %></th>
                                                <td style="width: 200px;"><%= product.name %></td>
                                                <td><%= product.category.name %></td>
                                                <td><%= product.price %></td>
                                                <td><%= product.offerPrice %></td>
                                                <td><%= product.stock %></td>
                                                <td>
                                                    <% if (product.image && product.image.length > 0) { %>
                                                        <% const imagePath = product.image[0].replace('D:\\week_12\\AQUApets\\public', baseURL) %>
                                                        <img class="product-image" src="<%= encodeURI(imagePath) %>" alt="<%= product.name %>" style="width: 50px; height: 50px;">
                                                    <% } else { %>
                                                        
                                                    <% } %>
                                                </td>
                                                <td >
                                                <span class="<%= product.unlist === 0 ? 'active' : 'blocked' %>">
                                                    <% if (product.unlist === 0) { %>Listed<% } else { %>Unlisted<% } %>
                                                </span>
                                                </td>

                                                <td style="width: 200px;">
                                                  <a id="unlist" href="/admin/unListProduct?id=<%= product._id %>" class="btn btn-primary btn-sm " role="button" onclick="confirmUnlist(event)" data-unlist="<%= product.unlist %>" style="width: 50px;">
                                                    <% if (product.unlist === 0) { %>Unlist<% } else { %>List<% } %>
                                                  </a>
                                                  <a href="/admin/editProduct?id=<%= product._id %>" class="btn btn-primary btn-sm" role="button" style="width: 50px;" >Edit</a>
                                                  <a id="delete" href="/admin/deleteProduct?id=<%= product._id %>" class="btn btn-danger btn-sm" role="button" onclick="confirmDelete(event)" style="width: 60px;">Delete</a>
                                                </td>
                                              </tr>
                                              <% }); %>
                                          <% } else { %>
                                            <tr>
                                              <td colspan="5">No products found</td>
                                            </tr>
                                          <% } %>  
                                          
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Table End -->


            <!-- Footer Start -->
            <div class="container-fluid pt-4 px-4">
                <div class="bg-light rounded-top p-4">
                    <div class="row">
                        <div class="col-12 col-sm-6 text-center text-sm-start">
                            &copy; <a href="#">AQUApets.in</a>, All Right Reserved. 
                        </div>
                        
                    </div>
                </div>
            </div>
            <!-- Footer End -->
        </div>
        <!-- Content End -->


        <script>
            // JavaScript function to update the hidden input field before submitting the form
            function updateStatus(index) {
                var selectedStatus = document.getElementById('status' + index).value;
                document.getElementById('newStatus' + index).value = selectedStatus;
                document.forms[index].submit();
            }

        </script>
        



        <!-- Back to Top -->
        <a href="#" class="btn btn-lg btn-primary btn-lg-square back-to-top"><i class="bi bi-arrow-up"></i></a>
    </div>

    <!-- sweet alert -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.9.0/dist/sweetalert2.all.min.js"></script>
    

    <!-- JavaScript Libraries -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="/lib/chart/chart.min.js"></script>
    <script src="/lib/easing/easing.min.js"></script>
    <script src="/lib/waypoints/waypoints.min.js"></script>
    <script src="/lib/owlcarousel/owl.carousel.min.js"></script>
    <script src="/lib/tempusdominus/js/moment.min.js"></script>
    <script src="/lib/tempusdominus/js/moment-timezone.min.js"></script>
    <script src="/lib/tempusdominus/js/tempusdominus-bootstrap-4.min.js"></script>
    
    


    <!-- Template Javascript -->
    <script src="/js/main.js"></script>
    
    
    <script>
        $(document).ready(function() {
            $('#searchInput').on('input', function() {
                const searchItem = $(this).val();

                // Make an AJAX request to the server to fetch search results.
                $.ajax({
                    url: '/admin/searchUserList',
                    method: 'POST',
                    data: { searchItem },
                    success: function(data) {
                        // Update the search results div with the data from the server.
                        $('#searchResults').html(data);
                    },
                    error: function(error) {
                        console.log(error);
                    }
                });
            });
        });

        //unlist product
        function confirmUnlist(event) {
        event.preventDefault(); 

        const isUnlist = event.currentTarget.getAttribute("data-unlist") === "0";
        const unlistButton = event.currentTarget;

            if (isUnlist) {
                Swal.fire({
                    icon: 'question',
                    title: 'Are you sure?',
                    text: 'Are you sure you want to unlist this product?',
                    showCancelButton: true,
                    confirmButtonText: 'Yes, unlist it!',
                    cancelButtonText: 'No, cancel!',
                    reverseButtons: true
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = unlistButton.getAttribute("href");
                    }
                });
            } else {
                window.location.href = unlistButton.getAttribute("href");
            }
        }

        // Trigger the click event on the "unlist" button after the user clicks "Yes" in the SweetAlert confirmation
        function triggerUnlistButtonClick() {
            var unlistButton = document.getElementById('unlist');
            if (unlistButton) {
                unlistButton.click();
            }
        }

        // Delete product
        function confirmDelete(event) {
            event.preventDefault();

            const deleteUrl = event.currentTarget.getAttribute("href");

            Swal.fire({
                title: "Are you sure?",
                text: "Once deleted, you will not be able to recover this product!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#d33",
                cancelButtonColor: "#3085d6",
                confirmButtonText: "Yes, delete it!",
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = deleteUrl;
                }
            });
        }

        //delete Category
        function confirmCategoryDelete(event){
            event.preventDefault();

            const deleteUrl = event.currentTarget.getAttribute("href");

            Swal.fire({
                title: "Are you sure?",
                text: "Once deleted, you will not be able to recover the product under this Category!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#d33",
                cancelButtonColor: "#3085d6",
                confirmButtonText: "Yes, delete it!",
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = deleteUrl;
                }
            });

        }

        //Toast message 
        const urlParams = new URLSearchParams(window.location.search);
        const successMessage = urlParams.get('successMessage');
        const errorMessage = urlParams.get('errorMessage');
        if (successMessage) {
            const toast = new bootstrap.Toast(document.querySelector('.toast'));
            const successToast = document.getElementById('successToast');
            successToast.textContent = successMessage;
            toast.show();
        }else if(errorMessage){
            const toast = new bootstrap.Toast(document.querySelector('.toast'));
            const successToast = document.getElementById('successToast');
            successToast.textContent = errorMessage;
            toast.show();
        }

        //login form
        document.addEventListener('DOMContentLoaded', function () {
        document.getElementById('admin-login').onsubmit = function (e) {
                e.preventDefault();
                const email = document.getElementById('email').value;
                const password = document.getElementById('password').value;       
                let errors = [];

                if (email.trim() === '') {
                    errors.push('Please enter your email address.');
                } else if (!isValidEmail(email)) {
                    errors.push('Please enter a valid email address.');
                }

                if (password.trim() === '') {
                    errors.push('Please enter your password.');
                } else if (password.length < 8) {
                    errors.push('Password must be at least 8 characters long.');
                } else if (!isStrongPassword(password)) {
                    errors.push('Password should be strong (e.g., include uppercase, lowercase, numbers, and special characters).');
                } 

                if (errors.length > 0) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Validation Error',
                        text: errors.join('\n')
                    });
                    return false;
                }else{
                    document.getElementById('admin-login').submit();
                }

                
            };

            function isValidEmail(email) {
                const emailRegex = /^\S+@\S+\.\S+$/;
                return emailRegex.test(email);
            }

            function isStrongPassword(password) {
                const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]+$/;
                return passwordRegex.test(password);
            }
        });

        //edit product
        document.addEventListener('DOMContentLoaded', function () {
            var form = document.getElementById('editProduct');

            form.addEventListener('submit', function (event) {
                if (!validateForm()) {
                    event.preventDefault();
                }
            });

            function validateForm() {
                var name = document.getElementById('name').value;
                var category = document.getElementById('category').value;
                var price = document.getElementById('price').value;
                var stock = document.getElementById('stock').value;
                var description = document.getElementById('description').value;
                var imageInput = document.getElementById('formFileMultiple');
                var imageFiles = imageInput.files;

                // Check if the name starts with an alphabet
                if (!/^[A-Za-z]/.test(name)) {
                    showErrorAlert('Product Name must start with an alphabet.');
                    return false;
                }

                if (name.trim() === '') {
                    showErrorAlert('Product Name cannot be empty.');
                    return false;
                }

                if (category.trim() === '') {
                    showErrorAlert('Please select a Product Category.');
                    return false;
                }

                if (isNaN(price) || price <= 0) {
                    showErrorAlert('Please enter a valid Price.');
                    return false;
                }

                if (isNaN(stock) || stock < 0) {
                    showErrorAlert('Please enter a valid Stock value.');
                    return false;
                }

                if (description.trim() === '') {
                    showErrorAlert('Product Description cannot be empty.');
                    return false;
                }

                // Image validation (optional)
                if (imageFiles.length > 0) {
                    for (var i = 0; i < imageFiles.length; i++) {
                        var allowedExtensions = /(\.jpg|\.jpeg|\.png|\.gif)$/i;
                        if (!allowedExtensions.test(imageFiles[i].name)) {
                            showErrorAlert('Invalid image file type. Please upload only JPG, JPEG, PNG, or GIF files.');
                            return false;
                        }
                    }
                }

    

                return true;
            }

            function showErrorAlert(message) {
                Swal.fire({
                    icon: 'error',
                    title: 'Validation Error',
                    text: message,
                });
            }
        });

        //add product
        document.addEventListener('DOMContentLoaded', function () {
            var form = document.getElementById('addProduct');

            form.addEventListener('submit', function (event) {
                if (!validateForm()) {
                    event.preventDefault();
                }
            });

            function validateForm() {
                var name = document.getElementById('name').value;
                var category = document.getElementById('category').value;
                var price = document.getElementById('price').value;
                var stock = document.getElementById('stock').value;
                var description = document.getElementById('floatingTextarea').value;
                var imageInput = document.getElementById('formFileMultiple');
                var imageFiles = imageInput.files;

            
                if (!/^[A-Za-z]/.test(name)) {
                    showErrorAlert('Product Name must start with an alphabet.');
                    return false;
                }

                if (name.trim() === '') {
                    showErrorAlert('Product Name cannot be empty.');
                    return false;
                }

                if (category.trim() === '' || category === 'select a category below') {
                    showErrorAlert('Please select a valid Product Category.');
                    return false;
                }

                if (isNaN(price) || price <= 0) {
                    showErrorAlert('Please enter a valid Price.');
                    return false;
                }

                if (isNaN(stock) || stock < 0) {
                    showErrorAlert('Please enter a valid Stock value.');
                    return false;
                }

                if (description.trim() === '') {
                    showErrorAlert('Product Description cannot be empty.');
                    return false;
                }

    
                if (imageFiles.length === 0) {
                    showErrorAlert('Please select at least one image.');
                    return false;
                }

            
                for (var i = 0; i < imageFiles.length; i++) {
                    var allowedExtensions = /(\.jpg|\.jpeg|\.png|\.gif)$/i;
                    if (!allowedExtensions.test(imageFiles[i].name)) {
                        showErrorAlert('Invalid image file type. Please upload only JPG, JPEG, PNG, or GIF files.');
                        return false;
                    }
                }

            

                return true;
            }

            function showErrorAlert(message) {
                Swal.fire({
                    icon: 'error',
                    title: 'Validation Error',
                    text: message,
                });
            }
        });


        //block user

        function confirmBlockUser(event, userId) {
            event.preventDefault(); // Prevent the default link behavior

            const isBlocking = event.currentTarget.innerText === 'Block'; // Check if the action is to block

            if (isBlocking) {
                Swal.fire({
                    icon: 'question',
                    title: 'Are you sure?',
                    text: 'Are you sure you want to block this user?',
                    showCancelButton: true,
                    confirmButtonText: 'Yes, block!',
                    cancelButtonText: 'No, cancel!',
                    reverseButtons: true
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = `/admin/blockUser?id=${userId}`;
                        // showSuccessAlert('User has been blocked successfully.');
                    }
                });
            } else {
                // For other actions (like unblocking), directly navigate to the URL without showing a confirmation
                window.location.href = `/admin/blockUser?id=${userId}`;
            }
        }

        // Function to display a success alert
        function showSuccessAlert(message) {
            Swal.fire({
                icon: 'success',
                title: 'Success',
                text: message
            });
        }


        function confirmBlock(event, isBlocked, id) {
        if (isBlocked === '0') {
            // Use SweetAlert to confirm the action
            Swal.fire({
            title: 'Block Category?',
            text: 'Are you sure you want to block this category?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Block',
            cancelButtonText: 'Cancel',
            allowOutsideClick: false // Prevent dismissing by clicking outside
            }).then((result) => {
            if (result.isConfirmed) {
                // If confirmed, display a success alert
                Swal.fire({
                title: 'Category Blocked!',
                text: 'The category has been successfully blocked.',
                icon: 'success'
                }).then(() => {
                // Proceed with the link
                redirectToCategoryBlock(id);
                });
            }
            });

            // Prevent the default behavior of the link
            event.preventDefault();
        }
        // If unblocking or already blocked, allow the link to proceed
        }

        function redirectToCategoryBlock(id) {
        // Redirect to the specified href link with the category ID
        window.location.href = `/admin/blockCategory?id=${id}`;
        }

    
    </script>
  

</body>